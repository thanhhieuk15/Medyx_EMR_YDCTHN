@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLTE.cshtml";
}
@section scripts{
                <script type="module" src="~/Assets/Client/ViewModel/DanhMuc/KisoViewmodel.js"></script>
                       <script type="module" src="~/Assets/Client/PDF/checkpluginvalid.js"></script>
}
@{
    Medyx_EMR_BCA.Models.DBConText.UserProfileSessionData Model = ViewData["UserProfileSessionData"] as Medyx_EMR_BCA.Models.DBConText.UserProfileSessionData;
    var ListRoleSession = Model.ListRoleSession;
    var QuyenXem = ListRoleSession.Where(x => x.ActionDetailsName == "/DMKhoa_Buong/Index/Modify").Count() > 0 ? "true" : "false";
    var ImportDanhMuc = ListRoleSession.Where(x => x.ActionDetailsName == "/DMKhoa_Buong/Index/ImportDanhMuc").Count() > 0;
    var ExportExcel = ListRoleSession.Where(x => x.ActionDetailsName == "/DMKhoa_Buong/Index/ExportExcel").Count() > 0;
}
@*<input id="txtQuyenXem" type="hidden" value='@(HTC.WEB.NIOEH.Core.HTCCheckRoles.CheckQuyenAction("/Client/DMKhoa_Buong/Modify")? "true" : "false")' />*@
<meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PDF - Plugin Web Demo</title>

    
<body style="">
    <div class="navbar navbar-inverse navbar-fixed-top navbar-brand navbar-custom">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
               
            </div>
         
        </div>
    </div>
    <div class="container body-content well-lg content">



<style>
    .vertical_custom {
        margin-top: 80px;
        width: 17%;
    }

    .input-custom {
        margin-right: 0px;
        width: 80%;
    }

    .btn-file {
        position: relative;
        overflow: hidden;
    }

        .btn-file input[type=file] {
            position: absolute;
            top: 0;
            right: 0;
            min-width: 100%;
            min-height: 100%;
            font-size: 999px;
            text-align: right;
            filter: alpha(opacity = 0);
            opacity: 0;
            outline: none;
            background: white;
            cursor: inherit;
            display: block;
        }

    .span-custom {
        margin-right: 20px;
        width: 150px;
    }

    .text-custom {
        width: 80%;
    }

    .v-divider {
        margin-left: 5px;
        margin-right: 5px;
        width: 1px;
        height: 100%;
        border-left: 1px solid gray;
        
    }
    td {
                width: 35%;
                padding: 0 5%;
                padding: 2% 5% 1% 2%;
                border: 2px solid black;
    }
    p{
                justify-content: center
            }

            th {
                width: 25%;
                padding: 2% 5% 2%;
                text-align: center;
                border: 2px solid black;
            }

            h2 {
                margin-top: 14px;
                margin-bottom: 60px;
                margin-left: 1px;
            }

            .container {
                padding: 0 145px;
            }
        </style>
        @{
            ViewBag.Title = "Nhà Cung Cấp ";
        }

        <h2>Thông Tin Nhà Cung Cấp</h2>

        <table>
            <tr>
                <th>Tên</th>
                <th>Nhà Cung Cấp</th>
                <th>Ngày Hết Hạn</th>
            </tr>
            @{
                var store = new System.Security.Cryptography.X509Certificates.X509Store(System.Security.Cryptography.X509Certificates.StoreName.My, System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser);
                store.Open(System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly);
                foreach (var certificate in store.Certificates)
                {
                    var cn = GetCommonNameFromSubject(certificate.Subject);
                    var cni = GetCommonNameFromSubject(certificate.Issuer);

                    <tr>
                        <td><p>@cn</p> </td>
                        <td><p>@cni</p> </td>
                        <td><p>@certificate.NotAfter</p></td>
                    </tr>
                }
                store.Close();
            }
        </table>

        @functions {

            public string GetCommonNameFromSubject(string subject)
            {
                var parts = subject.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
                foreach (var part in parts)
                {
                    var keyValue = part.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries);
                    if (keyValue.Length == 2 && keyValue[0].Trim().Equals("CN", StringComparison.OrdinalIgnoreCase))
                    {
                        return keyValue[1].Trim();
                    }
                }
                return "N/A";
            }
        }

    </div>
    <footer class="fotter_custom">
        <div id="ExtensionPlaceHolder" clientidmode="Static"></div>

    </footer>


    <object id="plugin0" type="application/x-bkavcaplugin" width="0" height="0">
    </object>
</body>