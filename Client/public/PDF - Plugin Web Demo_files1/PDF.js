// SignPDF
var dllName = "BkavCA,BkavCAv2S";
var licenseKey = "";

document.addEventListener(EXTENSION_EVENT_NAME.SIGN_PDF_FILE, function (data) {
    var result = document.getElementById('hrSignedData').value;
    document.getElementById('bkavca-out-stream').value = result;
    alert("No Callback");
    var iRet = parseInt(result);
    switch (iRet) {
        case 0:
            alert("Không có quyền sử dụng chức năng này");
            break;
        case 1:
            alert("Ký thành công");
            break;
        case 2:
            alert("Không thể ký dữ liệu do dữ liệu đã bị mã hóa");
            break;
        case 3:
            alert("Không tìm thấy chứng thư số");
            break;
        case 4:
            alert("Dữ liệu đầu vào không đúng định dạng");
            break;
        case 5:
            alert("Có lỗi trong quá trình ký");
            break;
        case 6:
            alert("Có lỗi trong quá trình lưu chữ ký");
            break;
        case 13:
            alert("Người dùng hủy bỏ");
            break;
        default:
            alert("Lỗi không xác định");
            break;
    }
});

function SignPDF(pdfFileIn, pdfFileOut, serial,nameSigner,urlIcon, offsetX, offsetY,pagePositionOfDS ,jsCallback) 
{
    try {
        var iCheck = checkBrowser();
        var objPDF = new ObjPdfSigner();
        if (pdfFileIn == "" || undefined == pdfFileIn) {
            alert("Bạn chưa chọn file");
            return;
        }
		
        objPDF.Base64String = pdfFileIn;
        objPDF.CertificateSerialNumber = serial;
        objPDF.SigningType = PDF_SIGNING_TYPE.SIGN_PDF_BASE64;
        objPDF.Signer =nameSigner;
        objPDF.offsetX = offsetX;
        objPDF.offsetY = offsetY;
       	objPDF.pagePositionOfDS = "none";// specify the page on which the signature widget will be shown
	    objPDF.FunctionCallback = jsCallback;  //  Kết quả ký sẽ được plugin tự động trả về paramater của hàm này 
       
           
        BkavCAPlugin.SetLicenseKey(licenseKey);
        //BkavCAPlugin.SetAESKey("TEST");
        BkavCAPlugin.SetUsePKCS11(SET_USE_PKCS11.NO);
        BkavCAPlugin.SetDLLName(dllName);
        BkavCAPlugin.SetHashAlgorithm(HASH_ALGORITHM.SHA256);
            
        BkavCAPlugin.SignPDF(objPDF); //

    } catch (e) {
        alert(e);
    }
}
// Verify
document.addEventListener(EXTENSION_EVENT_NAME.VERIFY_PDF, function (data) {
    var result = document.getElementById('hrSignedData').value;
    alert("No Callback");
    var iRet = parseInt(result);
    CheckVerifyResult(iRet);
});
function VerifyPDF(pdfIN, jsCallback) {
    var timeCheck = "2015/09/17 14:11:11";
    timeCheck = getDateTime();
    var iRet;
    if (pdfIN == "" || undefined == pdfIN) {
        alert("Bạn chưa chọn file");
        return;
    }
    try {
        var iCheck = checkBrowser();
        var objVerifyPDF = new ObjVerifier();
        objVerifyPDF.PathFileInput = pdfIN;
        objVerifyPDF.TimeCheck = timeCheck;
        objVerifyPDF.VerifyType = VERIFY_TYPE.VERYFY_FILE;
        objVerifyPDF.FunctionCallback = jsCallback;  //  Kết quả ký sẽ được plugin tự động trả về paramater của hàm này 

            BkavCAPlugin.VerifyPDF(objVerifyPDF); 
       
    } catch (e) {
        alert(e);
    }
}